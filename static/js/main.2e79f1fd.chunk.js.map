{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App.module.css","components/ContactList/ContactList.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/ContactFilter/ContactFilter.jsx","components/App.js","index.js"],"names":["module","exports","initionalState","name","number","ContactForm","state","changeFormHandler","target","value","setState","submitFormHandler","event","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","uniqueCheck","alert","this","className","styles","form","onSubmit","input","type","placeholder","onChange","btn","Component","ContactItem","onRemove","listItem","onClick","ContactList","contacts","length","map","contact","Filter","filter","App","contactsAddHandler","newContact","checkContactUnique","isUnique","find","handleRemoveContact","filterContactFilter","getFilteredContacts","toLowerCase","includes","visibleContact","wrapper","title","ContactFilter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e79f1fd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1Xhut\",\"input\":\"ContactForm_input__21rO3\",\"btn\":\"ContactForm_btn__2kvs1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__1AHrM\",\"title\":\"App_title__-HJXj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2tsCe\",\"btn\":\"ContactList_btn__2gaGj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"ContactFilter_input__17yab\"};","import { Component } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport styles from './ContactForm.module.css';\r\nconst initionalState = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass ContactForm extends Component {\r\n  state = initionalState;\r\n  changeFormHandler = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  submitFormHandler = event => {\r\n    event.preventDefault();\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n\r\n    const isValidForm = this.validateForm();\r\n    if (!isValidForm) return;\r\n\r\n    onAdd({ id: uuid(), name, number });\r\n    this.resetForm();\r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { uniqueCheck } = this.props;\r\n    if (!name || !number) {\r\n      alert('Fill in all fields');\r\n      return false;\r\n    }\r\n    return uniqueCheck(name);\r\n  };\r\n\r\n  resetForm = () => this.setState(initionalState);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className={styles.form} onSubmit={this.submitFormHandler}>\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.changeFormHandler}\r\n        />\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={this.changeFormHandler}\r\n        />\r\n        <button className={styles.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\nconst ContactItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <li className={styles.listItem} key={id}>\r\n      {name}: {number}{' '}\r\n      <button className={styles.btn} onClick={() => onRemove(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map(contact => (\r\n        <ContactItem {...contact} onRemove={onRemove} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string,\r\n  onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './ContactFilter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      className={styles.input}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Search contact\"\r\n    />\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react';\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport ContactFilter from './ContactFilter';\nimport styles from './App.module.css';\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n  contactsAddHandler = newContact => {\n    this.setState(({ contacts }) => ({ contacts: [...contacts, newContact] }));\n  };\n  checkContactUnique = name => {\n    const { contacts } = this.state;\n    const isUnique = !!contacts.find(contact => contact.name === name);\n    isUnique && alert('Contact is alredy in cotactList');\n    return !isUnique;\n  };\n\n  handleRemoveContact = id =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== id),\n    }));\n\n  filterContactFilter = filter => this.setState({ filter });\n\n  getFilteredContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContact = this.getFilteredContacts();\n    return (\n      <div className={styles.wrapper}>\n        <h2 className={styles.title}>Phonebook</h2>\n        <ContactForm\n          onAdd={this.contactsAddHandler}\n          uniqueCheck={this.checkContactUnique}\n        />\n        <h2 className={styles.title}>Contact List</h2>\n        <ContactFilter filter={filter} onChange={this.filterContactFilter} />\n        <ContactList\n          contacts={visibleContact}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './base.css';\nimport './reset.css';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}